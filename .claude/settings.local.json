{
  "permissions": {
    "allow": [
      "Bash(pnpm db:seed:*)",
      "Bash(pnpm exec prisma db reset:*)",
      "Bash(pnpm exec prisma migrate:*)",
      "Bash(pnpm dev:*)",
      "Bash(curl:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(Stop-Process -Id 2800 -Force)",
      "Bash(pnpm start:*)",
      "Bash(npx expo start:*)",
      "Bash(pnpm docker:up:*)",
      "Bash(docker:*)",
      "Bash(start \"\" \"C:\\Program Files\\Docker\\Docker\\Docker Desktop.exe\")",
      "Bash(timeout:*)",
      "Bash(npx ts-node:*)",
      "Bash(ls:*)",
      "Bash(python:*)",
      "Bash(paste:*)",
      "Bash(PORT=3007 pnpm dev)",
      "Bash(cd:*)",
      "Bash(copy:*)",
      "Bash(PORT=3008 pnpm dev)",
      "Bash(git add:*)",
      "Bash(git pull:*)",
      "Bash(docker-compose up:*)",
      "Bash(rm:*)",
      "Bash(git push:*)",
      "Bash(pnpm prisma:*)",
      "Bash(node:*)",
      "Bash(pnpm install:*)",
      "Bash(npx:*)",
      "Bash(npm cache clean:*)",
      "Bash(pnpm store prune:*)",
      "Bash(pnpm dlx:*)",
      "Bash(ipconfig /flushdns)",
      "Bash(cmd /c:*)",
      "Bash(start \"\" http://localhost:8085)",
      "Bash(start \"\" http://localhost:8086)",
      "Bash(pnpm add:*)",
      "Bash(start \"\" http://localhost:8087)",
      "Bash(PORT=3008 node -r ts-node/register src/server.ts)",
      "Bash(powershell:*)",
      "Bash(ipconfig)",
      "Bash(pnpm clean:*)",
      "Bash(git commit:*)",
      "Bash(pnpm exec prisma:*)",
      "Bash(pnpm remove:*)",
      "Bash(pnpm db:migrate:*)",
      "Bash(psql:*)",
      "Bash(pnpm type-check:*)",
      "Bash(pnpm lint:*)",
      "Bash(npm view:*)",
      "WebSearch",
      "Bash(npm install:*)",
      "Bash(tasklist)",
      "WebFetch(domain:api.sportsdata.io)",
      "Bash(pnpm list:*)",
      "Bash(cat:*)",
      "WebFetch(domain:www.ufc.com)",
      "Bash(pnpm db:generate:*)",
      "Bash(pnpm exec:*)",
      "Bash(for dir in prisma/migrations/*/)",
      "Bash(do sqlfile=\"$dirmigration.sql\")",
      "Bash(if [ -f \"$sqlfile\" ])",
      "Bash(then echo \"Running: $sqlfile\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(start \"\" http://localhost:3001/admin.html)",
      "Bash(git restore:*)",
      "Bash(tee:*)",
      "Bash(xargs cat:*)",
      "Bash(ping:*)",
      "Bash(start \"\" http://localhost:8083)",
      "Bash(dir:*)",
      "Bash(pnpm docker:logs:*)",
      "Bash(git log:*)",
      "WebFetch(domain:www.mmafighting.com)",
      "WebFetch(domain:bloodyelbow.com)",
      "WebFetch(domain:bleacherreport.com)",
      "WebFetch(domain:www.sherdog.com)",
      "WebFetch(domain:www.espn.com)",
      "WebFetch(domain:sherdog.com)",
      "WebFetch(domain:espn.com)"
    ],
    "deny": [],
    "ask": []
  },
  "hooks": {
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "powershell -c \"(New-Object Media.SoundPlayer 'C:\\Windows\\Media\\Alarm03.wav').PlaySync()\""
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "powershell -c \"(New-Object Media.SoundPlayer 'C:\\Windows\\Media\\Windows Notify System Generic.wav').PlaySync()\""
          }
        ]
      }
    ]
  }
}
